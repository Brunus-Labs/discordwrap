name: Semantic Release

on:
  pull_request:
    types: [closed]
    branches:
      - 'main'

jobs:
  release:
    if: (github.actor != 'dependabot[bot]') && (contains(github.head_ref, 'dependabot/') == false) && (github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    concurrency: release

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{secrets.DISCORD_WRAP_GITHUB_TOKEN}}

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v8

      - name: Cache poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry config virtualenvs.create false
          poetry install

      - name: Python Semantic Release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
          poetry build
          semantic-release publish -D commit_author="github-actions <action@github.com>"
        env:
          GH_TOKEN: ${{secrets.DISCORD_WRAP_GITHUB_TOKEN}}
          PYPI_TOKEN: ${{secrets.PYPI_TOKEN}}
